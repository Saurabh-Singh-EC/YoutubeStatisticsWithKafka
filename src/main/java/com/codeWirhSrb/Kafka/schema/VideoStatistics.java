/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.codeWirhSrb.Kafka.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VideoStatistics extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4982923831448639544L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VideoStatistics\",\"namespace\":\"com.codeWirhSrb.Kafka.schema\",\"fields\":[{\"name\":\"viewCount\",\"type\":\"string\",\"default\":\"None\"},{\"name\":\"likeCount\",\"type\":\"string\",\"default\":\"None\"},{\"name\":\"favoriteCount\",\"type\":\"string\",\"default\":\"None\"},{\"name\":\"commentCount\",\"type\":\"string\",\"default\":\"None\"},{\"name\":\"videoTitle\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<VideoStatistics> ENCODER =
      new BinaryMessageEncoder<VideoStatistics>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<VideoStatistics> DECODER =
      new BinaryMessageDecoder<VideoStatistics>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<VideoStatistics> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<VideoStatistics> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<VideoStatistics>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this VideoStatistics to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a VideoStatistics from a ByteBuffer. */
  public static VideoStatistics fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence viewCount;
  @Deprecated public java.lang.CharSequence likeCount;
  @Deprecated public java.lang.CharSequence favoriteCount;
  @Deprecated public java.lang.CharSequence commentCount;
  @Deprecated public java.lang.CharSequence videoTitle;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public VideoStatistics() {}

  /**
   * All-args constructor.
   * @param viewCount The new value for viewCount
   * @param likeCount The new value for likeCount
   * @param favoriteCount The new value for favoriteCount
   * @param commentCount The new value for commentCount
   * @param videoTitle The new value for videoTitle
   */
  public VideoStatistics(java.lang.CharSequence viewCount, java.lang.CharSequence likeCount, java.lang.CharSequence favoriteCount, java.lang.CharSequence commentCount, java.lang.CharSequence videoTitle) {
    this.viewCount = viewCount;
    this.likeCount = likeCount;
    this.favoriteCount = favoriteCount;
    this.commentCount = commentCount;
    this.videoTitle = videoTitle;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return viewCount;
    case 1: return likeCount;
    case 2: return favoriteCount;
    case 3: return commentCount;
    case 4: return videoTitle;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: viewCount = (java.lang.CharSequence)value$; break;
    case 1: likeCount = (java.lang.CharSequence)value$; break;
    case 2: favoriteCount = (java.lang.CharSequence)value$; break;
    case 3: commentCount = (java.lang.CharSequence)value$; break;
    case 4: videoTitle = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'viewCount' field.
   * @return The value of the 'viewCount' field.
   */
  public java.lang.CharSequence getViewCount() {
    return viewCount;
  }

  /**
   * Sets the value of the 'viewCount' field.
   * @param value the value to set.
   */
  public void setViewCount(java.lang.CharSequence value) {
    this.viewCount = value;
  }

  /**
   * Gets the value of the 'likeCount' field.
   * @return The value of the 'likeCount' field.
   */
  public java.lang.CharSequence getLikeCount() {
    return likeCount;
  }

  /**
   * Sets the value of the 'likeCount' field.
   * @param value the value to set.
   */
  public void setLikeCount(java.lang.CharSequence value) {
    this.likeCount = value;
  }

  /**
   * Gets the value of the 'favoriteCount' field.
   * @return The value of the 'favoriteCount' field.
   */
  public java.lang.CharSequence getFavoriteCount() {
    return favoriteCount;
  }

  /**
   * Sets the value of the 'favoriteCount' field.
   * @param value the value to set.
   */
  public void setFavoriteCount(java.lang.CharSequence value) {
    this.favoriteCount = value;
  }

  /**
   * Gets the value of the 'commentCount' field.
   * @return The value of the 'commentCount' field.
   */
  public java.lang.CharSequence getCommentCount() {
    return commentCount;
  }

  /**
   * Sets the value of the 'commentCount' field.
   * @param value the value to set.
   */
  public void setCommentCount(java.lang.CharSequence value) {
    this.commentCount = value;
  }

  /**
   * Gets the value of the 'videoTitle' field.
   * @return The value of the 'videoTitle' field.
   */
  public java.lang.CharSequence getVideoTitle() {
    return videoTitle;
  }

  /**
   * Sets the value of the 'videoTitle' field.
   * @param value the value to set.
   */
  public void setVideoTitle(java.lang.CharSequence value) {
    this.videoTitle = value;
  }

  /**
   * Creates a new VideoStatistics RecordBuilder.
   * @return A new VideoStatistics RecordBuilder
   */
  public static com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder newBuilder() {
    return new com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder();
  }

  /**
   * Creates a new VideoStatistics RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new VideoStatistics RecordBuilder
   */
  public static com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder newBuilder(com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder other) {
    return new com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder(other);
  }

  /**
   * Creates a new VideoStatistics RecordBuilder by copying an existing VideoStatistics instance.
   * @param other The existing instance to copy.
   * @return A new VideoStatistics RecordBuilder
   */
  public static com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder newBuilder(com.codeWirhSrb.Kafka.schema.VideoStatistics other) {
    return new com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder(other);
  }

  /**
   * RecordBuilder for VideoStatistics instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VideoStatistics>
    implements org.apache.avro.data.RecordBuilder<VideoStatistics> {

    private java.lang.CharSequence viewCount;
    private java.lang.CharSequence likeCount;
    private java.lang.CharSequence favoriteCount;
    private java.lang.CharSequence commentCount;
    private java.lang.CharSequence videoTitle;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.viewCount)) {
        this.viewCount = data().deepCopy(fields()[0].schema(), other.viewCount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.likeCount)) {
        this.likeCount = data().deepCopy(fields()[1].schema(), other.likeCount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.favoriteCount)) {
        this.favoriteCount = data().deepCopy(fields()[2].schema(), other.favoriteCount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.commentCount)) {
        this.commentCount = data().deepCopy(fields()[3].schema(), other.commentCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.videoTitle)) {
        this.videoTitle = data().deepCopy(fields()[4].schema(), other.videoTitle);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing VideoStatistics instance
     * @param other The existing instance to copy.
     */
    private Builder(com.codeWirhSrb.Kafka.schema.VideoStatistics other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.viewCount)) {
        this.viewCount = data().deepCopy(fields()[0].schema(), other.viewCount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.likeCount)) {
        this.likeCount = data().deepCopy(fields()[1].schema(), other.likeCount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.favoriteCount)) {
        this.favoriteCount = data().deepCopy(fields()[2].schema(), other.favoriteCount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.commentCount)) {
        this.commentCount = data().deepCopy(fields()[3].schema(), other.commentCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.videoTitle)) {
        this.videoTitle = data().deepCopy(fields()[4].schema(), other.videoTitle);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'viewCount' field.
      * @return The value.
      */
    public java.lang.CharSequence getViewCount() {
      return viewCount;
    }

    /**
      * Sets the value of the 'viewCount' field.
      * @param value The value of 'viewCount'.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder setViewCount(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.viewCount = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'viewCount' field has been set.
      * @return True if the 'viewCount' field has been set, false otherwise.
      */
    public boolean hasViewCount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'viewCount' field.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder clearViewCount() {
      viewCount = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'likeCount' field.
      * @return The value.
      */
    public java.lang.CharSequence getLikeCount() {
      return likeCount;
    }

    /**
      * Sets the value of the 'likeCount' field.
      * @param value The value of 'likeCount'.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder setLikeCount(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.likeCount = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'likeCount' field has been set.
      * @return True if the 'likeCount' field has been set, false otherwise.
      */
    public boolean hasLikeCount() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'likeCount' field.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder clearLikeCount() {
      likeCount = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'favoriteCount' field.
      * @return The value.
      */
    public java.lang.CharSequence getFavoriteCount() {
      return favoriteCount;
    }

    /**
      * Sets the value of the 'favoriteCount' field.
      * @param value The value of 'favoriteCount'.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder setFavoriteCount(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.favoriteCount = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'favoriteCount' field has been set.
      * @return True if the 'favoriteCount' field has been set, false otherwise.
      */
    public boolean hasFavoriteCount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'favoriteCount' field.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder clearFavoriteCount() {
      favoriteCount = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'commentCount' field.
      * @return The value.
      */
    public java.lang.CharSequence getCommentCount() {
      return commentCount;
    }

    /**
      * Sets the value of the 'commentCount' field.
      * @param value The value of 'commentCount'.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder setCommentCount(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.commentCount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'commentCount' field has been set.
      * @return True if the 'commentCount' field has been set, false otherwise.
      */
    public boolean hasCommentCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'commentCount' field.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder clearCommentCount() {
      commentCount = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'videoTitle' field.
      * @return The value.
      */
    public java.lang.CharSequence getVideoTitle() {
      return videoTitle;
    }

    /**
      * Sets the value of the 'videoTitle' field.
      * @param value The value of 'videoTitle'.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder setVideoTitle(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.videoTitle = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'videoTitle' field has been set.
      * @return True if the 'videoTitle' field has been set, false otherwise.
      */
    public boolean hasVideoTitle() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'videoTitle' field.
      * @return This builder.
      */
    public com.codeWirhSrb.Kafka.schema.VideoStatistics.Builder clearVideoTitle() {
      videoTitle = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public VideoStatistics build() {
      try {
        VideoStatistics record = new VideoStatistics();
        record.viewCount = fieldSetFlags()[0] ? this.viewCount : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.likeCount = fieldSetFlags()[1] ? this.likeCount : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.favoriteCount = fieldSetFlags()[2] ? this.favoriteCount : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.commentCount = fieldSetFlags()[3] ? this.commentCount : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.videoTitle = fieldSetFlags()[4] ? this.videoTitle : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<VideoStatistics>
    WRITER$ = (org.apache.avro.io.DatumWriter<VideoStatistics>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<VideoStatistics>
    READER$ = (org.apache.avro.io.DatumReader<VideoStatistics>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
